
https://leetcode.com/problems/palindrome-partitioning-ii/
//mcm way->gives tle

 public int minCut(String s) {
        int n=s.length();
             int[][] dp = new int[n][n];
        
        for(int g = 0; g < n; g++){
            for(int i = 0, j = g; j < n; i++, j++){
                if(g==0){
                    dp[i][j]=0;
                }
            
           else  if(g==1){
                  dp[i][j]= s.charAt(i)==s.charAt(j)?0:1;
                 
                }
                else{
                    if(s.charAt(i)==s.charAt(j) && dp[i+1][j-1]==0){
                        dp[i][j]=0;
                    }
                    else{
                    dp[i][j]=Integer.MAX_VALUE;
                
                for(int lk = g , rk = 1; lk >= 1; lk--, rk++){
                    int left = dp[i][j-lk];
                    int right = dp[i+rk][j];
               
                    
                    dp[i][j] = Math.min(dp[i][j], left + right +1);
                }
                }
                }
            }
        }
        
        return dp[0][n - 1];
    }